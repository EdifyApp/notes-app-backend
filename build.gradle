plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
}

group = 'com.notes'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'com.zaxxer:HikariCP:5.0.1'
	implementation 'org.postgresql:postgresql:42.3.6'
	implementation 'org.springframework.boot:spring-boot-starter-web:2.7.0'
	implementation 'com.mashape.unirest:unirest-java:1.4.9'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.0'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	implementation 'org.springdoc:springdoc-openapi-security:1.6.9'
	implementation 'org.mapstruct:mapstruct:1.5.2.Final'
	implementation 'com.google.firebase:firebase-admin:9.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-security:2.7.0'
	implementation 'org.thymeleaf:thymeleaf-spring6:3.1.0.RELEASE'
	implementation ('com.github.jsimone:webapp-runner:9.0.27.1') {
//		exclude module: "tomcat-embed-core"
//		exclude module: "tomcat-embed-websocket"
		exclude module: "tomcat-embed-jasper"
		exclude module: "tomcat-jasper"
		exclude module: "tomcat-jasper-el"
//		exclude module: "redisson-tomcat-9"
	}
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'

	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat:2.7.0'

	testImplementation 'com.h2database:h2:2.1.214'
	testImplementation 'org.mockito:mockito-core:4.6.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.0'


}

task stage() {
	dependsOn clean, war
}
war.mustRunAfter clean

task copyToLib(type: Copy) {
	into "$buildDir/server"
	from(configurations.compileClasspath) {
		include "webapp-runner*"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
	options.compilerArgs = [
			'-Amapstruct.suppressGeneratorTimestamp=true'
	]
}



stage.dependsOn(copyToLib)
